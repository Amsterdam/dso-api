{"name": "test_date_validation", "status": "broken", "statusDetails": {"message": "TypeError: list indices must be integers or slices, not str", "trace": "auth_header = {'Authorization': 'Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJXNTRsQzhsei1Yek9tVDhOMDFCTXdXLXlYbTFodGpH...MtbSpz1BNRT2GGHQXKU_ZUXNSAabHEafb46fnwjFdJ9-2WcGTqdCHMgPFw9qbZsHGXTriVjxlm4iStQq0oDf9WF8IK2FcuKpRPaqqNxB5luvzrAvZHseA'}\n\n    @allure.step(\"Validate `standBegingeldigheid` format as `date` for the API Call `https://acc.api.data.amsterdam.nl/v1/standvastgoed/gebouwen/id=2022-01-01.0363200000205917.3`\")\n    def test_date_validation(auth_header):\n    \n        \"\"\"Proving the datetime for `standBegingeldigheid`\"\"\"\n    \n        #payload = {\"id\": '2022-01-01.0363200000205917.3'}\n        response = requests.get(dataconstantstandvastgoed.dataset_url, headers=auth_header)\n        content =response.json()\n        print(content)\n        records = content[\"_embedded\"][\"gebouwen\"]\n>       standBegingeldigheid = records[\"standBegingeldigheid\"]\nE       TypeError: list indices must be integers or slices, not str\n\ne2etest/test_datasetstandvastgoed.py:81: TypeError"}, "description": "Proving the datetime for `standBegingeldigheid`", "steps": [{"name": "Validate `standBegingeldigheid` format as `date` for the API Call `https://acc.api.data.amsterdam.nl/v1/standvastgoed/gebouwen/id=2022-01-01.0363200000205917.3`", "status": "broken", "statusDetails": {"message": "TypeError: list indices must be integers or slices, not str\n", "trace": "  File \"/Users/jeswaran/projects/dso-api/venv/lib/python3.8/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/Users/jeswaran/projects/dso-api/src/e2etest/test_datasetstandvastgoed.py\", line 81, in test_date_validation\n    standBegingeldigheid = records[\"standBegingeldigheid\"]\n"}, "parameters": [{"name": "auth_header", "value": "{'Authorization': 'Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJXNTRsQzhsei1Yek9tVDhOMDFCTXdXLXlYbTFodGpHRlBRR0FUQm1SNU9BIn0.eyJleHAiOjE2NDcyNjUxODksImlhdCI6MTY0NzI2NDg4OSwianRpIjoiNWRhMWNiNGItZDgzMi00MzFiLWE3MjEtZDc3YTFlOGZjOWMxIiwiaXNzIjoiaHR0cHM6Ly9pYW0uYW1zdGVyZGFtLm5sL2F1dGgvcmVhbG1zL2RhdGFwdW50LWFkLWFjYyIsInN1YiI6IjEyYjc0YzZmLTRhNmUtNGFmMi05NzUzLTk1Yjg0MjdjMDE4MCIsInR5cCI6IkJlYXJlciIsImF6cCI6ImRhdGFkaWVuc3Rlbi10ZXN0IiwiYWNyIjoiMSIsInJlYWxtX2FjY2VzcyI6eyJyb2xlcyI6WyJmcF9zdHVyaW5nc21pZGRlbGVuIiwiZnBfbWR3Il19LCJzY29wZSI6InByb2ZpbGUgZW1haWwiLCJlbWFpbF92ZXJpZmllZCI6ZmFsc2UsImNsaWVudEhvc3QiOiIxMC4yNDMuMjQuMTIiLCJjbGllbnRJZCI6ImRhdGFkaWVuc3Rlbi10ZXN0IiwicHJlZmVycmVkX3VzZXJuYW1lIjoic2VydmljZS1hY2NvdW50LWRhdGFkaWVuc3Rlbi10ZXN0IiwiY2xpZW50QWRkcmVzcyI6IjEwLjI0My4yNC4xMiJ9.AMBqRHmwxc7s_c9s1OTFS2CJoEajBiS1m66gMahg2nlDsvnRXUfW5Zj7CVIAzEVUvmkPOVVUFMpH6gOHEYk8OIA7JLEhMEvJ9QKWIew9joCgvbKSXmCVF1lShyyp_goNEnnDCIwgaF09rcpeCzXS5KhfVh6DzX9IhWjLzlHqKTnOZu8Qi_lRxGdePaX_K7q_jeqVYyiLBgiZYiwP0lEJ7Lsz1XTag-CmRMtbSpz1BNRT2GGHQXKU_ZUXNSAabHEafb46fnwjFdJ9-2WcGTqdCHMgPFw9qbZsHGXTriVjxlm4iStQq0oDf9WF8IK2FcuKpRPaqqNxB5luvzrAvZHseA'}"}], "start": 1647264892288, "stop": 1647264894584}], "attachments": [{"name": "stdout", "source": "1a583661-422a-4d90-a95a-816b224346c0-attachment.txt", "type": "text/plain"}], "start": 1647264892288, "stop": 1647264894592, "uuid": "0873a43c-b79a-4088-8535-0e47150edf52", "historyId": "2cdad6e2383514d55545f03d8d4df8a2", "testCaseId": "18138a0ca3cbd5ed19a1a11df114cfd2", "fullName": "e2etest.test_datasetstandvastgoed#test_date_validation", "labels": [{"name": "parentSuite", "value": "e2etest"}, {"name": "suite", "value": "test_datasetstandvastgoed"}, {"name": "host", "value": "Jayashrees-MacBook-Pro.local"}, {"name": "thread", "value": "84808-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "e2etest.test_datasetstandvastgoed"}]}