{"name": "test_providing_wrongly_types_query", "status": "failed", "statusDetails": {"message": "AssertionError: assert 403 == 400\n +  where 403 = <Response [403]>.status_code", "trace": "@allure.step(\"API Call for `https://acc.api.data.amsterdam.nl/v1/aardgasvrijezones/buurt/?id=foo` match to `Bad request code 400`\")\n    def test_providing_wrongly_types_query():\n    \n        \"\"\"Prove that providing a string where an int is expected results in 400 (Bad Request).\"\"\"\n    \n        payload = {\"id\": \"foo\"}\n        buurtidresp = requests.get(datasetconstant.dataset_url, params=payload)\n>       assert buurtidresp.status_code == 400\nE       assert 403 == 400\nE        +  where 403 = <Response [403]>.status_code\n\ne2etest/test_datasetngfz.py:109: AssertionError"}, "description": "Prove that providing a string where an int is expected results in 400 (Bad Request).", "steps": [{"name": "API Call for `https://acc.api.data.amsterdam.nl/v1/aardgasvrijezones/buurt/?id=foo` match to `Bad request code 400`", "status": "failed", "statusDetails": {"message": "AssertionError: assert 403 == 400\n +  where 403 = <Response [403]>.status_code\n", "trace": "  File \"/Users/jeswaran/projects/dso-api/venv/lib/python3.8/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/Users/jeswaran/projects/dso-api/src/e2etest/test_datasetngfz.py\", line 109, in test_providing_wrongly_types_query\n    assert buurtidresp.status_code == 400\n"}, "start": 1647271076002, "stop": 1647271076058}], "start": 1647271076002, "stop": 1647271076058, "uuid": "2de48cfb-ed4a-4993-bf1b-be0f2b0dea08", "historyId": "368c27a9039a603f11a828df8574fd9f", "testCaseId": "fdaf31d0b6c02d1954d29efdcd1205ae", "fullName": "e2etest.test_datasetngfz#test_providing_wrongly_types_query", "labels": [{"name": "parentSuite", "value": "e2etest"}, {"name": "suite", "value": "test_datasetngfz"}, {"name": "host", "value": "Jayashrees-MBP.domain_not_set.invalid"}, {"name": "thread", "value": "85835-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "e2etest.test_datasetngfz"}]}