{"name": "test_query_existinggebouwen", "status": "broken", "statusDetails": {"message": "TypeError: 'Response' object is not subscriptable", "trace": "auth_header = {'Authorization': 'Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJXNTRsQzhsei1Yek9tVDhOMDFCTXdXLXlYbTFodGpH...vpMI2M0gzFOzmy-EeXMpPv3uYomft8hAArUOHSFy9IXiJncvl9TN71iAh5M7ZY6j8ymxNaq4iLIlouXI5pfdzL6j5dgKQZIOxZy12Km9O3e-J4v8-EntQ'}\n\n    @allure.step(\"API Call `https://acc.api.data.amsterdam.nl/v1/standvastgoed/gebouwen/` to check the existing property\")\n    def test_query_existinggebouwen(auth_header):\n    \n        \"\"\"Prove that query-ing by `pndId` finds property.\"\"\"\n    \n        payload = {\"id\": '2022-01-01.0363200000205917.3'}\n        response = requests.get(dataconstantstandvastgoed.dataset_url, params=payload, headers=auth_header)\n        #content = response.json()\n>       records = response[\"_embedded\"][\"gebouwen\"]\nE       TypeError: 'Response' object is not subscriptable\n\ne2etest/test_datasetstandvastgoed.py:38: TypeError"}, "description": "Prove that query-ing by `pndId` finds property.", "steps": [{"name": "API Call `https://acc.api.data.amsterdam.nl/v1/standvastgoed/gebouwen/` to check the existing property", "status": "broken", "statusDetails": {"message": "TypeError: 'Response' object is not subscriptable\n", "trace": "  File \"/Users/jeswaran/projects/dso-api/venv/lib/python3.8/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/Users/jeswaran/projects/dso-api/src/e2etest/test_datasetstandvastgoed.py\", line 38, in test_query_existinggebouwen\n    records = response[\"_embedded\"][\"gebouwen\"]\n"}, "parameters": [{"name": "auth_header", "value": "{'Authorization': 'Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJXNTRsQzhsei1Yek9tVDhOMDFCTXdXLXlYbTFodGpHRlBRR0FUQm1SNU9BIn0.eyJleHAiOjE2NDY4NDY4MzMsImlhdCI6MTY0Njg0NjUzMywianRpIjoiMGUwNjMzNDYtZGZhYS00NWFmLTg3OGEtYjQxODdlNDJlYjM0IiwiaXNzIjoiaHR0cHM6Ly9pYW0uYW1zdGVyZGFtLm5sL2F1dGgvcmVhbG1zL2RhdGFwdW50LWFkLWFjYyIsInN1YiI6IjEyYjc0YzZmLTRhNmUtNGFmMi05NzUzLTk1Yjg0MjdjMDE4MCIsInR5cCI6IkJlYXJlciIsImF6cCI6ImRhdGFkaWVuc3Rlbi10ZXN0IiwiYWNyIjoiMSIsInJlYWxtX2FjY2VzcyI6eyJyb2xlcyI6WyJmcF9zdHVyaW5nc21pZGRlbGVuIiwiZnBfbWR3Il19LCJzY29wZSI6InByb2ZpbGUgZW1haWwiLCJlbWFpbF92ZXJpZmllZCI6ZmFsc2UsImNsaWVudEhvc3QiOiIxMC4yNDMuMjQuMTIiLCJjbGllbnRJZCI6ImRhdGFkaWVuc3Rlbi10ZXN0IiwicHJlZmVycmVkX3VzZXJuYW1lIjoic2VydmljZS1hY2NvdW50LWRhdGFkaWVuc3Rlbi10ZXN0IiwiY2xpZW50QWRkcmVzcyI6IjEwLjI0My4yNC4xMiJ9.MT7Y9fD4xDJjf-hQSqjpYGXwJ7T_43KBU4yQxqlf44bppKJaGnSUMBFXz3ZtdO-BkI4BhyIFafVBYy6h6FFO_-X558Jzb-j4_tQz3ShrwanW-GljvNH7OSMmAUlsGwrP2ylqs3EdfwB3Bm7wAjaihLwW2uwZ055YfVHci9KtVQZdKpOlHDiXiSn6Qg1cQNv-ynZ0PcdZ3BYTTRtoDRqMyHvZgUsWdZ8XavpMI2M0gzFOzmy-EeXMpPv3uYomft8hAArUOHSFy9IXiJncvl9TN71iAh5M7ZY6j8ymxNaq4iLIlouXI5pfdzL6j5dgKQZIOxZy12Km9O3e-J4v8-EntQ'}"}], "start": 1646846535968, "stop": 1646846536216}], "start": 1646846535968, "stop": 1646846536226, "uuid": "7781f92d-2896-4378-a3c9-abc4550dd4c7", "historyId": "ec4cd297469c8978d24614163c24333e", "testCaseId": "779d204f8cd9cc42eb8209a00bafb6a6", "fullName": "e2etest.test_datasetstandvastgoed#test_query_existinggebouwen", "labels": [{"name": "parentSuite", "value": "e2etest"}, {"name": "suite", "value": "test_datasetstandvastgoed"}, {"name": "host", "value": "Jayashrees-MacBook-Pro.local"}, {"name": "thread", "value": "59698-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "e2etest.test_datasetstandvastgoed"}]}