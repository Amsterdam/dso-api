{"name": "test_date_validation", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)", "trace": "auth_header = {'Authorization': 'Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJXNTRsQzhsei1Yek9tVDhOMDFCTXdXLXlYbTFodGpH...CMGXEnozlNKjD8dDs2ndSDJMNq4ZB2whFib1A-2Kv3pBmonDnFAFFFIljwJimj1xblFMuprrWp7x3CDX7PussjUbMXnTnF5OtrnnyYiARzoqkJu-zQC2Q'}\n\n    @allure.step(\"Validate `standBegingeldigheid` format as `date` for the API Call `https://acc.api.data.amsterdam.nl/v1/standvastgoed/gebouwen/id=2022-01-01.0363200000205917.3`\")\n    def test_date_validation(auth_header):\n    \n        \"\"\"Proving the datetime for `standBegingeldigheid`\"\"\"\n    \n        payload = {\"id\": '2022-01-01.0363200000205917.3'}\n        response = requests.get(dataconstantstandvastgoed.dataset_url, params=payload, headers=auth_header)\n>       content =response.json()\n\ne2etest/test_datasetstandvastgoed.py:94: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../venv/lib/python3.8/site-packages/requests/models.py:900: in json\n    return complexjson.loads(self.text, **kwargs)\n/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/json/__init__.py:357: in loads\n    return _default_decoder.decode(s)\n/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x10b202160>\ns = '<html lang=\"nl\">\\n    <head>\\n    <meta charset=\"UTF-8\">\\n    <link rel=\"stylesheet\" href=\"https://fast.fonts.net/css...m dan <a href=\"mailto:datapunt@amsterdam.nl\">contact</a> met ons op.</div>\\n    </div>\\n    </div>\\n</body>\\n</html>\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/json/decoder.py:355: JSONDecodeError"}, "description": "Proving the datetime for `standBegingeldigheid`", "steps": [{"name": "Validate `standBegingeldigheid` format as `date` for the API Call `https://acc.api.data.amsterdam.nl/v1/standvastgoed/gebouwen/id=2022-01-01.0363200000205917.3`", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n", "trace": "  File \"/Users/jeswaran/projects/dso-api/venv/lib/python3.8/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/Users/jeswaran/projects/dso-api/src/e2etest/test_datasetstandvastgoed.py\", line 94, in test_date_validation\n    content =response.json()\n  File \"/Users/jeswaran/projects/dso-api/venv/lib/python3.8/site-packages/requests/models.py\", line 900, in json\n    return complexjson.loads(self.text, **kwargs)\n  File \"/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/json/__init__.py\", line 357, in loads\n    return _default_decoder.decode(s)\n  File \"/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\n"}, "parameters": [{"name": "auth_header", "value": "{'Authorization': 'Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJXNTRsQzhsei1Yek9tVDhOMDFCTXdXLXlYbTFodGpHRlBRR0FUQm1SNU9BIn0.eyJleHAiOjE2NDcyNzEzNzYsImlhdCI6MTY0NzI3MTA3NiwianRpIjoiMjA2ODIyNmUtMGVhYi00ZTZlLWI5YmEtMjc3MmI1ZThjMjM4IiwiaXNzIjoiaHR0cHM6Ly9pYW0uYW1zdGVyZGFtLm5sL2F1dGgvcmVhbG1zL2RhdGFwdW50LWFkLWFjYyIsInN1YiI6IjEyYjc0YzZmLTRhNmUtNGFmMi05NzUzLTk1Yjg0MjdjMDE4MCIsInR5cCI6IkJlYXJlciIsImF6cCI6ImRhdGFkaWVuc3Rlbi10ZXN0IiwiYWNyIjoiMSIsInJlYWxtX2FjY2VzcyI6eyJyb2xlcyI6WyJmcF9zdHVyaW5nc21pZGRlbGVuIiwiZnBfbWR3Il19LCJzY29wZSI6InByb2ZpbGUgZW1haWwiLCJlbWFpbF92ZXJpZmllZCI6ZmFsc2UsImNsaWVudEhvc3QiOiIxNDEuMjI0LjIxOC4yMTMiLCJjbGllbnRJZCI6ImRhdGFkaWVuc3Rlbi10ZXN0IiwicHJlZmVycmVkX3VzZXJuYW1lIjoic2VydmljZS1hY2NvdW50LWRhdGFkaWVuc3Rlbi10ZXN0IiwiY2xpZW50QWRkcmVzcyI6IjE0MS4yMjQuMjE4LjIxMyJ9.IQtKLmC_drooPDQoinwndE9nzWn2dibHhcE9E4B-nC_WjptC_RpOj68CJ2Mq5ZY3tKi8QCaBYlEU1lLPRTc6Pa6i9EAOrARD8--5SQmvzl811LB-kFe8D3oxna0bE62GMV-KNbyXe3jVDv9VmfHaH01QqPkOs6QNQx6J_w1r5GkYH2oIop0Btft5K9pM6xyAeA9EojBHHDYlHWpe9NxKe7f1ZKgANbspgCMGXEnozlNKjD8dDs2ndSDJMNq4ZB2whFib1A-2Kv3pBmonDnFAFFFIljwJimj1xblFMuprrWp7x3CDX7PussjUbMXnTnF5OtrnnyYiARzoqkJu-zQC2Q'}"}], "start": 1647271077284, "stop": 1647271077357}], "start": 1647271077284, "stop": 1647271077357, "uuid": "3f2517c9-6e29-4685-b6d0-a22598ecd30a", "historyId": "2cdad6e2383514d55545f03d8d4df8a2", "testCaseId": "18138a0ca3cbd5ed19a1a11df114cfd2", "fullName": "e2etest.test_datasetstandvastgoed#test_date_validation", "labels": [{"name": "parentSuite", "value": "e2etest"}, {"name": "suite", "value": "test_datasetstandvastgoed"}, {"name": "host", "value": "Jayashrees-MBP.domain_not_set.invalid"}, {"name": "thread", "value": "85835-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "e2etest.test_datasetstandvastgoed"}]}