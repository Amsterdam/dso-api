{"name": "test_collection_accessible_with_credentials", "status": "broken", "statusDetails": {"message": "requests.exceptions.MissingSchema: Invalid URL 'None': No schema supplied. Perhaps you meant http://None?", "trace": "@pytest.fixture(scope=\"session\")\n    def auth_header():\n        data = {\n            \"grant_type\": \"client_credentials\",\n            \"client_id\": datasetconstant.DATADIENSTEN_TEST_CLIENT_ID,\n            \"client_secret\": datasetconstant.DATADIENSTEN_TEST_CLIENT_SECRET,\n        }\n>       response = requests.post(cast(str, datasetconstant.OIDC_TOKEN_ENDPOINT), data=data)\n\ne2etest/test_datasetstandvastgoed.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../venv/lib/python3.8/site-packages/requests/api.py:119: in post\n    return request('post', url, data=data, json=json, **kwargs)\n../venv/lib/python3.8/site-packages/requests/api.py:61: in request\n    return session.request(method=method, url=url, **kwargs)\n../venv/lib/python3.8/site-packages/requests/sessions.py:528: in request\n    prep = self.prepare_request(req)\n../venv/lib/python3.8/site-packages/requests/sessions.py:456: in prepare_request\n    p.prepare(\n../venv/lib/python3.8/site-packages/requests/models.py:316: in prepare\n    self.prepare_url(url, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <PreparedRequest [POST]>, url = 'None', params = OrderedDict()\n\n    def prepare_url(self, url, params):\n        \"\"\"Prepares the given HTTP URL.\"\"\"\n        #: Accept objects that have string representations.\n        #: We're unable to blindly call unicode/str functions\n        #: as this will include the bytestring indicator (b'')\n        #: on python 3.x.\n        #: https://github.com/psf/requests/pull/2238\n        if isinstance(url, bytes):\n            url = url.decode('utf8')\n        else:\n            url = unicode(url) if is_py2 else str(url)\n    \n        # Remove leading whitespaces from url\n        url = url.lstrip()\n    \n        # Don't do any URL preparation for non-HTTP schemes like `mailto`,\n        # `data` etc to work around exceptions from `url_parse`, which\n        # handles RFC 3986 only.\n        if ':' in url and not url.lower().startswith('http'):\n            self.url = url\n            return\n    \n        # Support for unicode domain names and paths.\n        try:\n            scheme, auth, host, port, path, query, fragment = parse_url(url)\n        except LocationParseError as e:\n            raise InvalidURL(*e.args)\n    \n        if not scheme:\n            error = (\"Invalid URL {0!r}: No schema supplied. Perhaps you meant http://{0}?\")\n            error = error.format(to_native_string(url, 'utf8'))\n    \n>           raise MissingSchema(error)\nE           requests.exceptions.MissingSchema: Invalid URL 'None': No schema supplied. Perhaps you meant http://None?\n\n../venv/lib/python3.8/site-packages/requests/models.py:390: MissingSchema"}, "description": "Prove that getting the collection is accessible with credentials.", "start": 1646832809184, "stop": 1646832809184, "uuid": "79276790-916e-4c1b-a398-dde64665be5e", "historyId": "a60cd26105f6b375bee45da440df186e", "testCaseId": "867841a2d99445527ac84c007b70967f", "fullName": "e2etest.test_datasetstandvastgoed#test_collection_accessible_with_credentials", "labels": [{"name": "parentSuite", "value": "e2etest"}, {"name": "suite", "value": "test_datasetstandvastgoed"}, {"name": "host", "value": "Jayashrees-MacBook-Pro.local"}, {"name": "thread", "value": "56625-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "e2etest.test_datasetstandvastgoed"}]}