{
  "uid" : "5e8350bf9376c896",
  "name" : "test_collection_accessible_with_credentials",
  "fullName" : "e2etest.test_datasetstandvastgoed#test_collection_accessible_with_credentials",
  "historyId" : "a60cd26105f6b375bee45da440df186e",
  "time" : {
    "start" : 1646831794156,
    "stop" : 1646831794156,
    "duration" : 0
  },
  "description" : "Prove that getting the collection is accessible with credentials.",
  "descriptionHtml" : "<p>Prove that getting the collection is accessible with credentials.</p>\n",
  "status" : "broken",
  "statusMessage" : "requests.exceptions.MissingSchema: Invalid URL 'None': No schema supplied. Perhaps you meant http://None?",
  "statusTrace" : "@pytest.fixture(scope=\"session\")\n    def auth_header():\n        data = {\n            \"grant_type\": \"client_credentials\",\n            \"client_id\": datasetconstant.DATADIENSTEN_TEST_CLIENT_ID,\n            \"client_secret\": datasetconstant.DATADIENSTEN_TEST_CLIENT_SECRET,\n        }\n>       response = requests.post(cast(str, datasetconstant.OIDC_TOKEN_ENDPOINT), data=data)\n\ne2etest/test_datasetstandvastgoed.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../venv/lib/python3.8/site-packages/requests/api.py:119: in post\n    return request('post', url, data=data, json=json, **kwargs)\n../venv/lib/python3.8/site-packages/requests/api.py:61: in request\n    return session.request(method=method, url=url, **kwargs)\n../venv/lib/python3.8/site-packages/requests/sessions.py:528: in request\n    prep = self.prepare_request(req)\n../venv/lib/python3.8/site-packages/requests/sessions.py:456: in prepare_request\n    p.prepare(\n../venv/lib/python3.8/site-packages/requests/models.py:316: in prepare\n    self.prepare_url(url, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <PreparedRequest [POST]>, url = 'None', params = OrderedDict()\n\n    def prepare_url(self, url, params):\n        \"\"\"Prepares the given HTTP URL.\"\"\"\n        #: Accept objects that have string representations.\n        #: We're unable to blindly call unicode/str functions\n        #: as this will include the bytestring indicator (b'')\n        #: on python 3.x.\n        #: https://github.com/psf/requests/pull/2238\n        if isinstance(url, bytes):\n            url = url.decode('utf8')\n        else:\n            url = unicode(url) if is_py2 else str(url)\n    \n        # Remove leading whitespaces from url\n        url = url.lstrip()\n    \n        # Don't do any URL preparation for non-HTTP schemes like `mailto`,\n        # `data` etc to work around exceptions from `url_parse`, which\n        # handles RFC 3986 only.\n        if ':' in url and not url.lower().startswith('http'):\n            self.url = url\n            return\n    \n        # Support for unicode domain names and paths.\n        try:\n            scheme, auth, host, port, path, query, fragment = parse_url(url)\n        except LocationParseError as e:\n            raise InvalidURL(*e.args)\n    \n        if not scheme:\n            error = (\"Invalid URL {0!r}: No schema supplied. Perhaps you meant http://{0}?\")\n            error = error.format(to_native_string(url, 'utf8'))\n    \n>           raise MissingSchema(error)\nE           requests.exceptions.MissingSchema: Invalid URL 'None': No schema supplied. Perhaps you meant http://None?\n\n../venv/lib/python3.8/site-packages/requests/models.py:390: MissingSchema",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "django_test_environment",
    "time" : {
      "start" : 1646831784271,
      "stop" : 1646831784271,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_fail_for_invalid_template_variable",
    "time" : {
      "start" : 1646831784271,
      "stop" : 1646831784271,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "django_db_blocker",
    "time" : {
      "start" : 1646831784272,
      "stop" : 1646831784272,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "auth_header",
    "time" : {
      "start" : 1646831794157,
      "stop" : 1646831794158,
      "duration" : 1
    },
    "status" : "broken",
    "statusMessage" : "requests.exceptions.MissingSchema: Invalid URL 'None': No schema supplied. Perhaps you meant http://None?\n",
    "statusTrace" : "  File \"/Users/jeswaran/projects/dso-api/venv/lib/python3.8/site-packages/pluggy/callers.py\", line 187, in _multicall\n    res = hook_impl.function(*args)\n  File \"/Users/jeswaran/projects/dso-api/venv/lib/python3.8/site-packages/_pytest/fixtures.py\", line 1126, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/Users/jeswaran/projects/dso-api/venv/lib/python3.8/site-packages/_pytest/fixtures.py\", line 932, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/Users/jeswaran/projects/dso-api/src/e2etest/test_datasetstandvastgoed.py\", line 15, in auth_header\n    response = requests.post(cast(str, datasetconstant.OIDC_TOKEN_ENDPOINT), data=data)\n  File \"/Users/jeswaran/projects/dso-api/venv/lib/python3.8/site-packages/requests/api.py\", line 119, in post\n    return request('post', url, data=data, json=json, **kwargs)\n  File \"/Users/jeswaran/projects/dso-api/venv/lib/python3.8/site-packages/requests/api.py\", line 61, in request\n    return session.request(method=method, url=url, **kwargs)\n  File \"/Users/jeswaran/projects/dso-api/venv/lib/python3.8/site-packages/requests/sessions.py\", line 528, in request\n    prep = self.prepare_request(req)\n  File \"/Users/jeswaran/projects/dso-api/venv/lib/python3.8/site-packages/requests/sessions.py\", line 456, in prepare_request\n    p.prepare(\n  File \"/Users/jeswaran/projects/dso-api/venv/lib/python3.8/site-packages/requests/models.py\", line 316, in prepare\n    self.prepare_url(url, params)\n  File \"/Users/jeswaran/projects/dso-api/venv/lib/python3.8/site-packages/requests/models.py\", line 390, in prepare_url\n    raise MissingSchema(error)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  } ],
  "afterStages" : [ {
    "name" : "django_test_environment::teardown_test_environment",
    "time" : {
      "start" : 1646831794561,
      "stop" : 1646831794561,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "e2etest"
  }, {
    "name" : "suite",
    "value" : "test_datasetstandvastgoed"
  }, {
    "name" : "host",
    "value" : "Jayashrees-MacBook-Pro.local"
  }, {
    "name" : "thread",
    "value" : "55159-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "e2etest.test_datasetstandvastgoed"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "5e8350bf9376c896.json",
  "parameterValues" : [ ]
}